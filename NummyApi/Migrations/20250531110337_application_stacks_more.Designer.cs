// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NummyApi.DataContext;

#nullable disable

namespace NummyApi.Migrations
{
    [DbContext(typeof(NummyDataContext))]
    [Migration("20250531110337_application_stacks_more")]
    partial class application_stacks_more
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NummyApi.Entitites.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StackId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StackId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("NummyApi.Entitites.ApplicationStack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IconSvg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/C%23-%23239120.svg?logo=c-sharp&logoColor=white",
                            Title = "C#",
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Java-%23ED8B00.svg?logo=openjdk&logoColor=white",
                            Title = "Java",
                            Type = 22
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Flutter-02569B?logo=flutter&logoColor=white",
                            Title = "Flutter",
                            Type = 15
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/JavaScript-F7DF1E?logo=javascript&logoColor=black",
                            Title = "JavaScript",
                            Type = 23
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/AssemblyScript-007AAC?logo=assemblyscript&logoColor=white",
                            Title = "AssemblyScript",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Bash-4EAA25?logo=gnu-bash&logoColor=white",
                            Title = "Bash",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/C-00599C?logo=c&logoColor=white",
                            Title = "C",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/C++-00599C?logo=c%2B%2B&logoColor=white",
                            Title = "C++",
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/CoffeeScript-2F2625?logo=coffeescript&logoColor=white",
                            Title = "CoffeeScript",
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Clojure-5881D8?logo=clojure&logoColor=white",
                            Title = "Clojure",
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Crystal-000000?logo=crystal&logoColor=white",
                            Title = "Crystal",
                            Type = 7
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/CSS-1572B6?logo=css3&logoColor=white",
                            Title = "CSS",
                            Type = 8
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Dart-0175C2?logo=dart&logoColor=white",
                            Title = "Dart",
                            Type = 9
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Elixir-4B275F?logo=elixir&logoColor=white",
                            Title = "Elixir",
                            Type = 10
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Elm-1293D8?logo=elm&logoColor=white",
                            Title = "Elm",
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("11111111-2222-3333-4444-555555555555"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/EJS-B4CA65?logo=ejs&logoColor=black",
                            Title = "EJS",
                            Type = 12
                        },
                        new
                        {
                            Id = new Guid("22222222-3333-4444-5555-666666666666"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Erlang-A90533?logo=erlang&logoColor=white",
                            Title = "Erlang",
                            Type = 13
                        },
                        new
                        {
                            Id = new Guid("33333333-4444-5555-6666-777777777777"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/F%23-378BBA?logo=f-sharp&logoColor=white",
                            Title = "F#",
                            Type = 14
                        },
                        new
                        {
                            Id = new Guid("44444444-5555-6666-7777-888888888888"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Fortran-734F96?logo=fortran&logoColor=white",
                            Title = "Fortran",
                            Type = 16
                        },
                        new
                        {
                            Id = new Guid("55555555-6666-7777-8888-999999999999"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Go-00ADD8?logo=go&logoColor=white",
                            Title = "Go",
                            Type = 17
                        },
                        new
                        {
                            Id = new Guid("66666666-7777-8888-9999-aaaaaaaaaaaa"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Haskell-5E5086?logo=haskell&logoColor=white",
                            Title = "Haskell",
                            Type = 18
                        },
                        new
                        {
                            Id = new Guid("77777777-8888-9999-aaaa-bbbbbbbbbbbb"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Haxe-EA8220?logo=haxe&logoColor=white",
                            Title = "Haxe",
                            Type = 19
                        },
                        new
                        {
                            Id = new Guid("88888888-9999-aaaa-bbbb-cccccccccccc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/HTML-E34F26?logo=html5&logoColor=white",
                            Title = "HTML",
                            Type = 20
                        },
                        new
                        {
                            Id = new Guid("99999999-aaaa-bbbb-cccc-dddddddddddd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/HTMX-0366C?logo=htmx&logoColor=white",
                            Title = "HTMX",
                            Type = 21
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/JSON-000000?logo=json&logoColor=white",
                            Title = "JSON",
                            Type = 24
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-cccc-dddd-eeee-ffffffffffff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Kotlin-7F52FF?logo=kotlin&logoColor=white",
                            Title = "Kotlin",
                            Type = 25
                        },
                        new
                        {
                            Id = new Guid("cccccccc-dddd-eeee-ffff-111111111111"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Lua-2C2D72?logo=lua&logoColor=white",
                            Title = "Lua",
                            Type = 26
                        },
                        new
                        {
                            Id = new Guid("dddddddd-eeee-ffff-1111-222222222222"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Markdown-000000?logo=markdown&logoColor=white",
                            Title = "Markdown",
                            Type = 27
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-ffff-1111-2222-333333333333"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/MDX-1B1F24?logo=mdx&logoColor=white",
                            Title = "MDX",
                            Type = 28
                        },
                        new
                        {
                            Id = new Guid("ffffffff-1111-2222-3333-444444444444"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Nim-FFE953?logo=nim&logoColor=black",
                            Title = "Nim",
                            Type = 29
                        },
                        new
                        {
                            Id = new Guid("11111111-2222-3333-4444-555555555556"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Nix-5277C3?logo=nixos&logoColor=white",
                            Title = "Nix",
                            Type = 30
                        },
                        new
                        {
                            Id = new Guid("22222222-3333-4444-5555-666666666667"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/OCaml-EC6813?logo=ocaml&logoColor=white",
                            Title = "OCaml",
                            Type = 31
                        },
                        new
                        {
                            Id = new Guid("33333333-4444-5555-6666-777777777778"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://custom-icon-badges.demolab.com/badge/Odin-1E5184?logo=odinlang",
                            Title = "Odin",
                            Type = 32
                        },
                        new
                        {
                            Id = new Guid("44444444-5555-6666-7777-888888888889"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Objective--C-3A95E3?logo=apple&logoColor=white",
                            Title = "Objective-C",
                            Type = 33
                        },
                        new
                        {
                            Id = new Guid("55555555-6666-7777-8888-999999999990"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Perl-39457E?logo=perl&logoColor=white",
                            Title = "Perl",
                            Type = 34
                        },
                        new
                        {
                            Id = new Guid("66666666-7777-8888-9999-aaaaaaaaaaab"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/PHP-777BB4?logo=php&logoColor=white",
                            Title = "PHP",
                            Type = 35
                        },
                        new
                        {
                            Id = new Guid("77777777-8888-9999-aaaa-bbbbbbbbbbbc"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Python-3776AB?logo=python&logoColor=white",
                            Title = "Python",
                            Type = 36
                        },
                        new
                        {
                            Id = new Guid("88888888-9999-aaaa-bbbb-cccccccccccd"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/R-276DC3?logo=r&logoColor=white",
                            Title = "R",
                            Type = 37
                        },
                        new
                        {
                            Id = new Guid("99999999-aaaa-bbbb-cccc-ddddddddddee"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Ruby-CC342D?logo=ruby&logoColor=white",
                            Title = "Ruby",
                            Type = 38
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Rust-000000?logo=rust&logoColor=white",
                            Title = "Rust",
                            Type = 39
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeefff"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Sass-CC6699?logo=sass&logoColor=white",
                            Title = "Sass",
                            Type = 40
                        },
                        new
                        {
                            Id = new Guid("cccccccc-dddd-eeee-ffff-111111111112"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Scratch-4D97FF?logo=scratch&logoColor=white",
                            Title = "Scratch",
                            Type = 41
                        },
                        new
                        {
                            Id = new Guid("dddddddd-eeee-ffff-1111-222222222223"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Scala-DC322F?logo=scala&logoColor=white",
                            Title = "Scala",
                            Type = 42
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-ffff-1111-2222-333333333334"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Solidity-363636?logo=solidity&logoColor=white",
                            Title = "Solidity",
                            Type = 43
                        },
                        new
                        {
                            Id = new Guid("ffffffff-1111-2222-3333-444444444445"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Swift-F54A2A?logo=swift&logoColor=white",
                            Title = "Swift",
                            Type = 44
                        },
                        new
                        {
                            Id = new Guid("11111111-2222-3333-4444-555555555557"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/TypeScript-3178C6?logo=typescript&logoColor=white",
                            Title = "TypeScript",
                            Type = 45
                        },
                        new
                        {
                            Id = new Guid("22222222-3333-4444-5555-666666666668"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/V-5D87BF?logo=v&logoColor=white",
                            Title = "V",
                            Type = 46
                        },
                        new
                        {
                            Id = new Guid("33333333-4444-5555-6666-777777777779"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/WebAssembly-654FF0?logo=webassembly&logoColor=white",
                            Title = "WebAssembly",
                            Type = 47
                        },
                        new
                        {
                            Id = new Guid("44444444-5555-6666-7777-88888888888a"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/XML-767C52?logo=xml&logoColor=white",
                            Title = "XML",
                            Type = 48
                        },
                        new
                        {
                            Id = new Guid("55555555-6666-7777-8888-99999999999b"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/YAML-CB171E?logo=yaml&logoColor=white",
                            Title = "YAML",
                            Type = 49
                        },
                        new
                        {
                            Id = new Guid("66666666-7777-8888-9999-aaaaaaaaaaac"),
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 4, 0, 0, 0)),
                            IconSvg = "https://img.shields.io/badge/Zig-F7A41D?logo=zig&logoColor=black",
                            Title = "Zig",
                            Type = 50
                        });
                });

            modelBuilder.Entity("NummyApi.Entitites.CodeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("text");

                    b.Property<string>("InnerException")
                        .HasColumnType("text");

                    b.Property<int>("LogLevel")
                        .HasColumnType("integer");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceIdentifier")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CodeLogs");
                });

            modelBuilder.Entity("NummyApi.Entitites.RequestLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HttpLogId")
                        .HasColumnType("uuid");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RemoteIp")
                        .HasColumnType("text");

                    b.Property<string>("TraceIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("NummyApi.Entitites.ResponseLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HttpLogId")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ResponseLogs");
                });

            modelBuilder.Entity("NummyApi.Entitites.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarColorHex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NummyApi.Entitites.TeamApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamApplications");
                });

            modelBuilder.Entity("NummyApi.Entitites.TeamUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamUsers");
                });

            modelBuilder.Entity("NummyApi.Entitites.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarColorHex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastLoginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NummyApi.Entitites.Application", b =>
                {
                    b.HasOne("NummyApi.Entitites.ApplicationStack", "Stack")
                        .WithMany()
                        .HasForeignKey("StackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stack");
                });

            modelBuilder.Entity("NummyApi.Entitites.TeamApplication", b =>
                {
                    b.HasOne("NummyApi.Entitites.Application", "Application")
                        .WithMany("TeamApplications")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NummyApi.Entitites.Team", "Team")
                        .WithMany("TeamApplications")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NummyApi.Entitites.TeamUser", b =>
                {
                    b.HasOne("NummyApi.Entitites.Team", "Team")
                        .WithMany("TeamUsers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NummyApi.Entitites.User", "User")
                        .WithMany("TeamUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NummyApi.Entitites.Application", b =>
                {
                    b.Navigation("TeamApplications");
                });

            modelBuilder.Entity("NummyApi.Entitites.Team", b =>
                {
                    b.Navigation("TeamApplications");

                    b.Navigation("TeamUsers");
                });

            modelBuilder.Entity("NummyApi.Entitites.User", b =>
                {
                    b.Navigation("TeamUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
