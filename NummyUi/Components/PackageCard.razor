@using NummyShared.DTOs.Enums

<div @onclick="ToggleShow" style="cursor: pointer">
    <Card BodyStyle="padding: 20px" Bordered Style=@($"border-color: {BorderColor}; border-radius: 4px;")>
        <GridRow>
            <GridCol>
                <Avatar Shape="AvatarShape.Square"
                        Src="@IconUrl"
                        Size="@("2.9em")"
                        Style="margin-right: 20px; border-radius: 4px">
                </Avatar>
            </GridCol>
            <GridCol>
                <Title Level="3">@Title</Title>
                <Text Type="TextElementType.Secondary">@Description</Text>
                <Collapse DefaultActiveKey="@(IsExpanded ? ["1"] : [])" Style="margin-top: 16px">
                    <Panel Key="1" ShowArrow="false" Header="Configuration Steps">
                        <Steps Current="@CurrentStep" OnChange="OnStepChange" Direction="vertical"
                               Class="site-navigation-steps">
                            @StepsContent
                        </Steps>
                    </Panel>
                </Collapse>
            </GridCol>
        </GridRow>
    </Card>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public string IconUrl { get; set; }
    [Parameter] public int CurrentStep { get; set; }
    [Parameter] public EventCallback<int> OnStepChange { get; set; }
    [Parameter] public bool IsExpanded { get; set; }
    [Parameter] public EventCallback<bool> IsExpandedChanged { get; set; }
    [Parameter] public RenderFragment StepsContent { get; set; }
    [Parameter] public string BorderColor { get; set; }

    private async Task ToggleShow()
    {
        await IsExpandedChanged.InvokeAsync(!IsExpanded);
    }
} 