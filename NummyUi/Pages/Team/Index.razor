@namespace NummyUi.Pages.Team
@page "/team"
@using NummyShared.DTOs
@using NummyUi.Components

<Spin Spinning="@_teamsLoading">
    <ChildContent>
        <Space Direction="DirectionVHType.Vertical" Style="width: 100%">
            <SpaceItem>
                <AddButton OnClick="@(() => _isAddTeamModalVisible = true)"
                           Title="Create Team"
                           Description="Click to create a new team">
                </AddButton>
            </SpaceItem>
            <SpaceItem>
                <AntList TItem="TeamToListDto" Class="filterCardList" Grid="_grid" DataSource="_teams">
                    <ListItem NoFlex>
                        <Card Bordered Hoverable BodyStyle="padding-bottom: 20px;" Actions="@GetActions(context)">
                            <CardMeta>
                                <AvatarTemplate>
                                    <Avatar Shape="AvatarShape.Square"
                                            Size="@("3.5rem")"
                                            Style="color: #f56a00; background-color: #fde3cf; vertical-align: middle; border-radius: 4px">
                                        @context.Name[0].ToString().ToUpper()
                                    </Avatar>
                                </AvatarTemplate>
                                <TitleTemplate>@context.Name</TitleTemplate>
                                <DescriptionTemplate>
                                    <Text Type="TextElementType.Secondary">@context.Description</Text>
                                </DescriptionTemplate>
                            </CardMeta>
                            <Divider/>
                            <GridRow>
                                <GridCol Span="11">
                                    <GridRow Style="margin-bottom: 12px">
                                        <Text Strong>Members</Text>
                                    </GridRow>
                                    <GridRow Style="margin-bottom: 28px">
                                        <AvatarGroup MaxCount="2" MaxStyle="color: #f56a00; background-color:#fde3cf;">
                                            @foreach (var user in context.Users)
                                            {
                                                <Tooltip Title="@($"{user.Name} {user.Surname}")"
                                                         Placement="Placement.Top">
                                                    <Unbound Context="userAvatarContext">
                                                        <Avatar Style="@($"background-color: {user.AvatarColorHex};")"
                                                                RefBack="@userAvatarContext">
                                                            @(user.Name[0].ToString().ToUpper() + user.Surname[0].ToString().ToUpper())
                                                        </Avatar>
                                                    </Unbound>
                                                </Tooltip>
                                            }
                                        </AvatarGroup>
                                    </GridRow>
                                </GridCol>
                                <GridCol Span="2">
                                    <Divider Type="DirectionVHType.Vertical" Style="height: 100%"/>
                                </GridCol>
                                <GridCol Span="11">
                                    <GridRow Style="margin-bottom: 12px">
                                        <Text Strong>Applications</Text>
                                    </GridRow>
                                    <GridRow Style="margin-bottom: 28px">
                                        <AvatarGroup MaxCount="2" MaxStyle="color: #f56a00; background-color:#fde3cf;">
                                            @foreach (var application in context.Applications)
                                            {
                                                <Tooltip Title="@($"{application.Name}")" Placement="Placement.Top">
                                                    <Unbound Context="appAvatarContext">
                                                        <Avatar RefBack="@appAvatarContext"
                                                            Src="@("data:image/svg+xml;utf8," + Uri.EscapeDataString(application.Stack.IconSvg))">
                                                        </Avatar>
                                                    </Unbound>
                                                </Tooltip>
                                            }
                                        </AvatarGroup>
                                    </GridRow>
                                </GridCol>
                            </GridRow>

                            <GridRow Style="margin-bottom: 6px">
                                <Text Strong>Created at</Text>
                            </GridRow>
                            <GridRow Style="margin-bottom: 0">
                                @context.CreatedAt.ToString("dd MMMM, yyyy")
                            </GridRow>
                        </Card>
                    </ListItem>
                </AntList>
        
            </SpaceItem>
        </Space>
    </ChildContent>
</Spin>

<Modal @bind-Visible="_isAddTeamModalVisible"
       Title="Create a New Team"
       OnOk="@HandleAddTeam"
       OkText="@("Add")"
       CancelText="@("Cancel")"
       OnCancel="@(() => _isAddTeamModalVisible = false)">
    <Form @ref="@_addTeamForm" Model="@_teamAddModel" Layout="vertical">
        <FormItem Label="Team Name" Required>
            <Input @bind-Value="@_teamAddModel.Name" Placeholder="Enter team name"/>
        </FormItem>
        <FormItem Label="Description">
            <TextArea @bind-Value="@_teamAddModel.Description" Placeholder="Enter team description"></TextArea>
        </FormItem>
        <FormItem Label="Team Members">
            <Select Mode="Multiple"
                    Placeholder="Select team members"
                    @bind-Values="@_teamAddModel.SelectedUserIds"
                    TItemValue="Guid"
                    TItem="Guid"
                    Style="width: 100%"
                    EnableSearch
                    Loading="@_allUsersLoading"
                    AllowClear>
                <SelectOptions>
                    @foreach (var user in _allUsers)
                    {
                        <SelectOption TItemValue="Guid"
                                      TItem="Guid"
                                      Value=@user.Id
                                      Label="@($"{user.Name} {user.Surname}")"/>
                    }
                </SelectOptions>
            </Select>
        </FormItem>
        @if (_teamAddModel.SelectedUserIds.Any())
        {
            <FormItem>
                @*<AntDesign.Flex Wrap="FlexWrap.Wrap" Gap="FlexGap.Small">*@
                @foreach (var userId in _teamAddModel.SelectedUserIds)
                {
                    var user = _allUsers.First(u => u.Id == userId);

                    <Tag Closable Style="padding: 6px 10px; margin-top: 6px;"
                         OnClose="@(() => RemoveUser(userId))">
                        <Avatar Size="@("1.7rem")"
                                Style="@($"background-color: {user.AvatarColorHex}; margin-right: 8px;")">
                            @($"{user.Name[0]}{user.Surname[0]}".ToUpper())
                        </Avatar>
                        <Text Strong Style="font-size: 13px">@($"{user.Name} {user.Surname}")</Text>
                    </Tag>
                }
                @*</AntDesign.Flex>*@
            </FormItem>
        }
        <FormItem Label="Team Applications">
            <Select Mode="Multiple"
                    Placeholder="Select team applications"
                    @bind-Values="@_teamAddModel.SelectedApplicationIds"
                    TItemValue="Guid"
                    TItem="Guid"
                    Style="width: 100%"
                    EnableSearch
                    Loading="@_allApplicationsLoading"
                    AllowClear>
                <SelectOptions>
                    @foreach (var application in _allApplications)
                    {
                        <SelectOption TItemValue="Guid"
                                      TItem="Guid"
                                      Value=@application.Id
                                      Label="@application.Name"/>
                    }
                </SelectOptions>
            </Select>
        </FormItem>
        @if (_teamAddModel.SelectedApplicationIds.Any())
        {
            <FormItem>
                @foreach (var applicationId in _teamAddModel.SelectedApplicationIds)
                {
                    var application = _allApplications.First(a => a.Id == applicationId);

                    <Tag Closable Style="padding: 6px 10px; margin-top: 6px;"
                         OnClose="@(() => RemoveApplication(applicationId))">
                        // todo
                        <Avatar Size="@("1.7rem")"
                                Src="@("data:image/svg+xml;utf8," + "Uri.EscapeDataString(context.Stack.IconSvg)")">
                        </Avatar>
                        <Text Strong Style="font-size: 13px">@application.Name</Text>
                    </Tag>
                }
            </FormItem>
        }
    </Form>
</Modal>

@code
{
    private RenderFragment<TeamToListDto> Edit => ctx => @<AntDesign.Tooltip Title="Edit">
                                                             <Icon Type="edit" Theme="@IconThemeType.Outline"
                                                                   OnClick="@(() => OnEdit(ctx))"/>
                                                         </AntDesign.Tooltip>;

    private RenderFragment<TeamToListDto> Share => ctx => @<AntDesign.Tooltip Title="Share">
                                                              <Icon Type="share-alt" Theme="@IconThemeType.Outline"
                                                                    OnClick="@(() => OnShare(ctx))"/>
                                                          </AntDesign.Tooltip>;

    private RenderFragment<TeamToListDto> Delete => ctx => @<AntDesign.Tooltip Title="Delete">
                                                               <Popconfirm Title="Are you sure delete this team?"
                                                                           OkText="Yes"
                                                                           CancelText="No"
                                                                           OnConfirm="@(() => OnDelete(ctx))">
                                                                   <Icon Type="delete" Style="color: red"
                                                                         Theme="@IconThemeType.Outline"/>
                                                               </Popconfirm>
                                                           </AntDesign.Tooltip>;

    private RenderFragment<TeamToListDto> More => ctx => @<AntDesign.Tooltip Title="More">
                                                             <Icon Type="more" Theme="@IconThemeType.Outline"
                                                                   OnClick="@(() => { })"/>
                                                         </AntDesign.Tooltip>;

    private IList<RenderFragment> GetActions(TeamToListDto context)
    {
        return new List<RenderFragment>
        {
            Edit(context),
            Share(context),
            Delete(context),
            More(context)
        };
    }
}